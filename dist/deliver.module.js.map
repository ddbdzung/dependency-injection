{"version":3,"sources":["../src/deliver.module.ts"],"sourcesContent":["import { IUserModule } from \"./user.module.interface\";\nimport { Inject, Injectable } from \"./container\";\nimport { IDeliverModule } from \"./deliver.module.interface\";\nimport { IOfficeModule } from \"./office.module.interface\";\nimport { UserModule } from \"./user.module\";\nimport { OfficeModule } from \"./office.module\";\nimport { InjectionToken } from \"./token\";\n\n// Not following the Single Responsibility Principle\n// Not willing to change the UserModule and OfficeModule classes because they are used in other parts of the application\n// export class DeliverModule {\n//   private _officeModule: OfficeModule;\n//   private _userModule: UserModule;\n\n//   constructor() {\n//     this._officeModule = new OfficeModule();\n//     this._userModule = new UserModule();\n//   }\n\n//   public userDrivingToOffice(): void {\n//     console.log(`User ${this._userModule.fullName} driving to office`);\n//   }\n// }\n\n// export const DeliverModuleToken = new InjectionToken<IDeliverModule>(\n//   \"DeliverModule\"\n// );\n\n@Injectable\nexport class DeliverModule implements IDeliverModule {\n  constructor(\n    @Inject(new InjectionToken(\"OfficeModule\"))\n    private _officeModule: IOfficeModule,\n    // @Inject(new InjectionToken(\"UserModule\")) // Will throw error because is not injected to constructor of DeliverModule => will be undefined\n    private _userModule: IUserModule\n  ) {}\n\n  userDrivingToOffice(): void {\n    console.log(\"User driving to office\");\n    this._userModule.createUser(\"Dzung Dang\");\n    this._officeModule.userArrivedToOffice();\n  }\n}\n"],"names":["DeliverModule","_officeModule","_userModule","userDrivingToOffice","console","log","createUser","userArrivedToOffice","InjectionToken"],"mappings":";;;;+BA6BaA;;;eAAAA;;;mCA7Be;yBACO;qCAEL;qBAGC;;;;;;;;;;;;;;;AAuBxB,IAAA,AAAMA,8BAAD,AAAL;;aAAMA,cAET,AACQC,aAA4B,EACpC,6IAA6I;IACrIC,WAAwB;aAFxBD,gBAAAA;aAEAC,cAAAA;;iBALCF;IAQXG,OAAAA,mBAIC,GAJDA,SAAAA;QACEC,QAAQC,GAAG,CAAC;QACZ,IAAI,CAACH,WAAW,CAACI,UAAU,CAAC;QAC5B,IAAI,CAACL,aAAa,CAACM,mBAAmB;IACxC;WAZWP;;;;4CAEGQ,qBAAc,CAAC"}