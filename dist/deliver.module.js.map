{"version":3,"sources":["../src/deliver.module.ts"],"sourcesContent":["import { IUserModule } from \"./user.module.interface\";\nimport { Inject, Injectable } from \"./container\";\nimport { IDeliverModule } from \"./deliver.module.interface\";\nimport { IOfficeModule } from \"./office.module.interface\";\nimport { UserModule } from \"./user.module\";\nimport { OfficeModule } from \"./office.module\";\n\n// Not following the Single Responsibility Principle\n// Not willing to change the UserModule and OfficeModule classes because they are used in other parts of the application\n// export class DeliverModule {\n//   private _officeModule: OfficeModule;\n//   private _userModule: UserModule;\n\n//   constructor() {\n//     this._officeModule = new OfficeModule();\n//     this._userModule = new UserModule();\n//   }\n\n//   public userDrivingToOffice(): void {\n//     console.log(`User ${this._userModule.fullName} driving to office`);\n//   }\n// }\n\n@Injectable\nexport class DeliverModule implements IDeliverModule {\n  constructor(\n    @Inject private _officeModule: OfficeModule,\n    @Inject private _userModule: IUserModule\n  ) {}\n\n  userDrivingToOffice(): void {\n    console.log(\"User driving to office\");\n    this._officeModule.userArrivedToOffice();\n  }\n}\n"],"names":["DeliverModule","_officeModule","_userModule","userDrivingToOffice","console","log","userArrivedToOffice"],"mappings":";;;;+BAwBaA;;;eAAAA;;;mCAxBe;yBACO;4BAIN;;;;;;;;;;;;;;;AAmBtB,IAAA,AAAMA,8BAAD,AAAL;;aAAMA,cAET,AAAgBC,aAA2B,EAC3C,AAAgBC,WAAwB;aADxBD,gBAAAA;aACAC,cAAAA;;iBAHPF;IAMXG,OAAAA,mBAGC,GAHDA,SAAAA;QACEC,QAAQC,GAAG,CAAC;QACZ,IAAI,CAACJ,aAAa,CAACK,mBAAmB;IACxC;WATWN"}