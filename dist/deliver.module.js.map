{"version":3,"sources":["../src/deliver.module.ts"],"sourcesContent":["import { Injectable } from \"./container\";\nimport { IDeliverModule } from \"./deliver.module.interface\";\nimport { IOfficeModule } from \"./office.module.interface\";\nimport { UserModule } from \"./user.module\";\n\n// Not following the Single Responsibility Principle\n// Not willing to change the UserModule and OfficeModule classes because they are used in other parts of the application\n// export class DeliverModule {\n//   private _officeModule: OfficeModule;\n//   private _userModule: UserModule;\n\n//   constructor() {\n//     this._officeModule = new OfficeModule();\n//     this._userModule = new UserModule();\n//   }\n\n//   public userDrivingToOffice(): void {\n//     console.log(`User ${this._userModule.fullName} driving to office`);\n//   }\n// }\n\n@Injectable()\nexport class DeliverModule implements IDeliverModule {\n  constructor() {\n    // console.log(\"[DEBUG][DzungDang] _officeModule:\", _officeModule);\n  }\n  // constructor(@Inject() private readonly _officeModule: IOfficeModule) {\n  //   console.log(\"[DEBUG][DzungDang] _officeModule:\", _officeModule);\n  // }\n\n  userDrivingToOffice(): void {\n    console.log(\n      \"User driving to office\"\n      // this._officeModule.userArrivedToOffice()\n    );\n  }\n}\n"],"names":["DeliverModule","userDrivingToOffice","console","log"],"mappings":";;;;+BAsBaA;;;eAAAA;;;yBAtBc;;;;;;;;;;AAsBpB,IAAA,AAAMA,8BAAD,AAAL;;aAAMA;iBAAAA;IAIX,yEAAyE;IACzE,qEAAqE;IACrE,IAAI;IAEJC,OAAAA,mBAKC,GALDA,SAAAA;QACEC,QAAQC,GAAG,CACT;IAGJ;WAbWH"}